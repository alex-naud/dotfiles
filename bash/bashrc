
# Note: This file is a modification of the .bashrc file
# found in Ubuntu 23.10 Mantic
#
# Note from original .bashrc
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#

# ---------------- Interactive check -------- #
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# ----------------- History ----------------- #

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# --------------- Terminal window --------------- #

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# -------------- Globbing ----------------------- #

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# --------- Various ---------- #
# Stop C-s accidental terminal stop
stty stop undef

# ----------------- Prompt ---------------------- #

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

if [ "$color_prompt" = yes ]; then
  if [ -f "$HOME/.git-prompt.sh" ]; then
    . "$HOME/.git-prompt.sh"
    PS1='$(__git_ps1 "[%s] ")${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
  else
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ' 
  fi
else
  if [ -f "$HOME/.git-prompt.sh" ]; then
    . "$HOME/.git-prompt.sh"
    PS1='$(__git_ps1 "[%s] ")${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
  else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
  fi
fi

unset color_prompt

## If this is an xterm set the title to user@host:dir
#case "$TERM" in
#xterm*|rxvt*)
#    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
#    ;;
#*)
#    ;;
#esac

# Shrink prompt
PROMPT_DIRTRIM=2

# -------------------- VI Mode ---------------------------- #

# Set vi mode
set -o vi
bind -m vi-command 'Control-l: clear-screen'
bind -m vi-insert 'Control-l: clear-screen'

# -------------- PATH --------------------------------- #
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/Scripts:$PATH"
export PATH="$HOME/go/bin:$PATH"
export PATH="/usr/local/go/bin:$PATH"

# ------------- Environment variable ------------------ #
export EDITOR=vim
export GHFOLDER="$HOME/GitHub"
export GHUSER="alex-naud"
export TMPDIRECTORY="$HOME/tmp"

# -------------- cdpath -------------------------------#
export CDPATH=".:$GHFOLDER/$GHUSER:$GHFOLDER"

# -------------------- Coloured command -------------------------- #

# enable color support for ls and grep
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" \
      || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# -------------------- Aliases ---------------------------------- #

alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias ipython='ipython3'
alias python='python3'
alias vi='vim'
alias \?='duck'
alias chmox='chmod +x'
alias tmp="cd $TMPDIRECTORY"
alias venv='eval `venvutil`'

# -------------------- Auto completion ---------------------------- #
# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# --------- Interactive function -------- #

# Want to source a python virtual environment if exist in . or ..
# Otherwise create a virtual environment and install requirements.txt
#
# Cannot be in a standalone command, as the source would be applied
# to the new process.
venv() {
  if [ -d ./venv/ ]; then
    source ./venv/bin/activate
  elif [ -d ../venv/ ]; then
    read -r -e -p "Found venv in parent folder. Do you want to load it instead (Y/n) ?" choice
    if [[ "$choice" == [Yy]*  ]] || [[ "$choice" == '' ]]; then
      source ../venv/bin/activate
    fi
  else
    read -r -e -p "No venv in current or parent folder, do you want to create venv (Y/n)?" choice
    if [[ "$choice" == [Yy]* ]] || [[ "$choice" == '' ]]; then
      
      echo "Creating Python virtual ..."
      python3 -m venv ./venv/ && \

      echo "Sourcing virtual environment..."
      source ./venv/bin/activate && \

      echo "Installing ipython..."
      pip install ipython --quiet && \

      if [ -f ./requirements.txt ]; then
        echo "Installing requirements..."
        pip install -r requirements.txt --quiet
      fi

      echo "Refreshing shell hash table..."
      hash -r || \
        {
          local error_message="The command failed: "
          [[ $? -eq 1 ]] && error_message+="'python3 -m venv ./venv/'"
          [[ $? -eq 2 ]] && error_message+="'source ./venv/bin/activate'"
          [[ $? -eq 3 ]] && error_message+="'pip install ipython'"
          [[ $? -eq 5 ]] && error_message+="'hash -r'"
          echo "$error_message"
      }
    fi
  fi
}

# ---------------------- z history cmd ------------------------- #
# Stop using it for the moment with CDPATH
# Source Z
#if [ -f $HOME/.zsh ]; then 
#  . $HOME/.zsh 
#fi


