# Source Z
if [ -f $HOME/.zsh ]; then 
  . $HOME/.zsh 
fi

# Add git to prompt
if [ -f $HOME/.git-prompt.sh ]; then
  . $HOME/.git-prompt.sh
#  PS1='$(__git_ps1 "[%s] ")'"$PS1" # TODO MAKE IT WORK!!!!
  PS1='$(__git_ps1 "[%s] ")${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
fi

# Shrink prompt
PROMPT_DIRTRIM=2

# Stop C-s accidental terminal stop
stty stop undef

# Set vi mode
set -o vi
bind -m vi-command 'Control-l: clear-screen'
bind -m vi-insert 'Control-l: clear-screen'

# -------------- PATH --------------------------------- #
export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/Scripts:$PATH"
export PATH="$HOME/go/bin:$PATH"

# ------------- Environment variable ------------------ #
export EDITOR=vim
export GHFOLDER="$HOME/GitHub"
export GHUSER="alex-naud"
export DOTFILES="$GHFOLDER/$GHUSER/dotfiles"
export TMPDIRECTORY="$HOME/.tmp"
export SCRIPTS="$HOME/Scripts"

# --------------------- alias ------------------------- #
alias ipython='ipython3'
alias python='python3'
alias vi='vim'

alias dot='cd $DOTFILES'
alias tmp='cd $TMPDIRECTORY'
alias ghf='cd $GHFOLDER/$GHUSER'
alias scripts='cd $SCRIPTS'

alias chmox='chmod +x'

alias gs_recursive='find . -maxdepth 1 -mindepth 1 -type d -exec sh -c \
  "echo {}; cd {}; git status -sb; echo" \;'

alias gf_recursive='find . -maxdepth 1 -mindepth 1 -type d -exec sh -c \
  "echo {}; cd {}; git fetch; echo" \;'

alias analysis='source $HOME/.local/python_venv/analysis/bin/activate'

alias now='date "+%Y%m%d%H%M%S"'

# ------------------------ Functions ------------------- #
# Create a python virtual environment and install ipython
# TODO Create venv in separate function
#      and call function if chose not to load venv from parent folder
venv() {
  if [ -d ./venv/ ]; then
    source ./venv/bin/activate
  elif [ -d ../venv/ ]; then
    read -r -e -p "Found venv in parent folder. Do you want to load it instead (Y/n) ?" choice
    if [[ "$choice" == [Yy]*  ]] || [[ "$choice" == '' ]]; then
      source ../venv/bin/activate
    fi
  else
    read -r -e -p "No venv in current or parent folder, do you want to create venv (Y/n)?" choice
    if [[ "$choice" == [Yy]* ]] || [[ "$choice" == '' ]]; then
      
      echo "Creating Python virtual ..."
      python3 -m venv ./venv/ && \

      echo "Sourcing virtual environment..."
      source ./venv/bin/activate && \

      echo "Installing ipython..."
      pip install ipython --quiet && \

      if [ -f ./requirements.txt ]; then
        echo "Installing requirements..."
        pip install -r requirements.txt --quiet
      fi

      echo "Refreshing shell hash table..."
      hash -r || \
        {
          local error_message="The command failed: "
          [[ $? -eq 1 ]] && error_message+="'python3 -m venv ./venv/'"
          [[ $? -eq 2 ]] && error_message+="'source ./venv/bin/activate'"
          [[ $? -eq 3 ]] && error_message+="'pip install ipython'"
          [[ $? -eq 5 ]] && error_message+="'hash -r'"
          echo "$error_message"
      }
    fi
  fi
}
